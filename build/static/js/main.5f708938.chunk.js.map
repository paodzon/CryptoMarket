{"version":3,"sources":["services/cryptoApi.js","services/cryptoNewsApi.js","components/Navbar.jsx","components/Footer.jsx","components/Card.jsx","pages/Homepage.jsx","actions/index.js","pages/Cryptocurrencies.jsx","pages/Exchanges.jsx","pages/News.jsx","pages/CryptoDetails.jsx","App.js","reducers/cryptoReducer.js","reducers/cryptoNewsReducer.js","reducers/index.js","index.js"],"names":["axios","create","baseURL","headers","params","freshness","textFormat","safeSearch","Navbar","className","to","Footer","Card","props","name","price","coin","change","counter","img","formatter","Intl","NumberFormat","style","currency","minimumFractionDigits","src","width","format","changeColor","Homepage","stats","useSelector","state","crypto","cryptoData","coins","dispatch","useDispatch","useEffect","type","total","totalExchanges","totalMarkets","totalMarketCap","total24hVolume","renderStats","map","i","id","marketCap","iconUrl","renderCards","Cryptocurrencies","cryptos","useState","setData","search","setSearch","filteredData","filter","toLowerCase","includes","class","placeholder","value","onChange","e","target","volume","circulatingSupply","renderCryptos","Exchanges","exchanges","exchangesData","exchange","numberOfMarkets","renderExchanges","News","news","cryptoNews","data","href","url","image","thumbnail","contentUrl","description","provider","moment","datePublished","renderNews","CryptoDetails","navigate","useNavigate","coinId","useParams","coinDetails","cryptoDetails","a","cryptoApi","get","response","payload","formatter2","rank","symbol","onClick","totalSupply","dangerouslySetInnerHTML","__html","App","cryptoNewsApi","q","count","index","path","element","INITIAL_STATE","cryptoReducer","action","cryptoNewsReducer","combineReducers","composeEnchancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","reducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5f708938.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL:'https://coinranking1.p.rapidapi.com',\r\n    headers: {\r\n        'x-rapidapi-host': 'coinranking1.p.rapidapi.com',\r\n        'x-rapidapi-key': 'd35d7880f8mshaa749fac4ca935ap119f3ajsn360f65482632'\r\n    }\r\n})\r\n","import axios from 'axios';\r\n\r\nexport default axios.create({\r\n    baseURL: 'https://bing-news-search1.p.rapidapi.com/news',\r\n    headers: {\r\n        'x-bingapis-sdk': 'true',\r\n        'x-rapidapi-host': 'bing-news-search1.p.rapidapi.com',\r\n        'x-rapidapi-key': 'd35d7880f8mshaa749fac4ca935ap119f3ajsn360f65482632'\r\n      },\r\n      params: {\r\n        freshness: 'Day',\r\n        textFormat: 'Raw',\r\n        safeSearch: 'Off'\r\n      },\r\n    \r\n})","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n      <nav>\r\n        <div className=\"nav__logo\">\r\n          <h1>CryptoMarket</h1>\r\n        </div>\r\n        <ul>\r\n          <Link to=\"/\">\r\n            <li>Dashboard</li>\r\n          </Link>\r\n          <Link to=\"cryptocurrencies\">\r\n            <li>Cryptocurrencies</li>\r\n          </Link>\r\n          <Link to=\"exchanges\">\r\n            <li>Exchanges</li>\r\n          </Link>\r\n          <Link to=\"news\">\r\n            <li>News</li>\r\n          </Link>\r\n        </ul>\r\n      </nav>\r\n    );\r\n}\r\n\r\nexport default Navbar\r\n","import React from 'react';\r\nimport './Footer.css';\r\n\r\nconst Footer = () =>{\r\n    return (<footer>\r\n            <p>Copyright© 2021 P0W. All Rights Reserved</p>      \r\n            \r\n        </footer>)\r\n}\r\n\r\nexport default Footer","import React from 'react';\r\nimport './Card.css';\r\n\r\nconst Card = (props) => {\r\n\r\n    const {name, price, coin,change,counter, img} = props;\r\n\r\n    const formatter = new Intl.NumberFormat('en-US', {\r\n        style: 'currency',\r\n        currency: 'USD',\r\n        minimumFractionDigits: 2\r\n      })\r\n\r\n      const changeColor = (change) =>{\r\n        if(change < 0){\r\n          return(<span className=\"crypto__red\">{change}%</span>)\r\n        }else{\r\n          return(<span className=\"crypto__green\">{change}%</span>)\r\n        }\r\n      }  \r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__title\">\r\n        <div>{`${counter}. ${name}`}</div>\r\n        <div>\r\n            <img src={img} width=\"30\"/>\r\n        </div>\r\n      </div>\r\n      <div className=\"card__details\">\r\n        <p>Price: {formatter.format(price)}</p>\r\n        <p>Market Cap: {formatter.format(coin)}</p>\r\n        <p>Daily Change: {changeColor(change)}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card\r\n","import React,{useEffect} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useSelector, useDispatch} from 'react-redux';\r\nimport { clearCrypto } from '../actions';\r\nimport Card from '../components/Card';\r\n\r\nimport './Homepage.css';\r\n\r\nconst Homepage = () =>{\r\n\r\n    const stats = useSelector((state) => state.crypto.cryptoData.stats);\r\n    const coins = useSelector((state) => state.crypto.cryptoData.coins);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n      dispatch(clearCrypto());\r\n    }, []);\r\n\r\n    const renderStats = () =>{\r\n        const formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: 0\r\n          })\r\n        if(stats){\r\n        return (\r\n            <>\r\n              \r\n              <div className=\"cryptostats__container\">\r\n         \r\n                  <div className=\"cryptostats__wrapper\">\r\n                    <div className=\"ui statistic\">\r\n                      <div className=\"value\">{stats.total}</div>\r\n                      <div className=\"label\">Total Currencies</div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"cryptostats__wrapper\">\r\n                  <div className=\"ui statistic\">\r\n                      <div className=\"value\">{stats.totalExchanges}</div>\r\n                      <div className=\"label\">Total Exchanges</div>\r\n                  </div>\r\n                  \r\n                  </div>\r\n                  <div className=\"cryptostats__wrapper\">\r\n                  <div className=\"ui statistic\">\r\n                      <div className=\"value\">{stats.totalMarkets}</div>\r\n                      <div className=\"label\">Total Markets</div>\r\n                  </div>\r\n                  </div>\r\n            \r\n    \r\n            \r\n                  <div className=\"cryptostats__wrapper\">\r\n                  <div className=\"ui statistic\">\r\n                      <div className=\"value\">{formatter.format(stats.totalMarketCap)}</div>\r\n                      <div className=\"label\">Total Market Cap</div>\r\n                  </div>\r\n                  </div>\r\n                  <div className=\"cryptostats__wrapper\">\r\n                  <div className=\"ui statistic\">\r\n                      <div className=\"value\">{formatter.format(stats.total24hVolume)}</div>\r\n                      <div className=\"label\">Total Volume</div>\r\n                  </div>\r\n                  </div>\r\n             \r\n              </div>\r\n            </>\r\n       \r\n        );\r\n    }\r\n    }\r\n\r\n\r\n    const renderCards = () => {\r\n      if(coins){\r\n        return coins.map((coin,i) => {\r\n            if(i < 10){\r\n                return (\r\n                    <div className=\"topcrypto__cards\">\r\n                      <Link to={`/crypto/${coin.id}`}> \r\n                      <Card\r\n                        key={coin.id}\r\n                        counter={i+1}\r\n                        name={coin.name}\r\n                        price={coin.price}\r\n                        coin={coin.marketCap}\r\n                        change={coin.change}\r\n                        img={coin.iconUrl}\r\n                      />\r\n                      </Link>\r\n                      \r\n                    </div>\r\n                  );\r\n            }\r\n          \r\n        });\r\n      }\r\n    };\r\n\r\n    return(<div className=\"homepage\">\r\n        <div className=\"homepage__cryptostats\">\r\n            <div className=\"cryptostats__header\">\r\n            <h1>Global Cryto Stats</h1>\r\n            </div>\r\n        \r\n        {renderStats()}\r\n        </div>\r\n        <div className=\"homepage__topcrypto\">\r\n            <h1>Top 10 CryptoCurrencies</h1>\r\n            <div className=\"topcrypto__flex\">\r\n            {renderCards()}\r\n            </div>\r\n            \r\n        </div>\r\n        \r\n    </div>)\r\n\r\n    \r\n}\r\n\r\nexport default Homepage;","import cryptoApi from \"../services/cryptoApi\";\r\nimport cryptoNewsApi from \"../services/cryptoNewsApi\";\r\n \r\nexport const getCryptos = () => async(dispatch) =>{\r\n    const response = await cryptoApi.get('/coins');\r\n    dispatch({\r\n        type:\"GET_CRYPTOS\",\r\n        payload: response.data.data\r\n    })\r\n}\r\n\r\nexport const getCrypto = (id) => async(dispatch) =>{\r\n\r\n    const response = await cryptoApi.get(`/coin/${id}`)\r\n\r\n    dispatch({\r\n        type:'GET_CRYPTO',\r\n        payload: response.data.data\r\n    })\r\n}\r\n\r\nexport const clearCrypto = () =>{\r\n    return({\r\n        type:'CLEAR_CRYPTO'\r\n    })\r\n}\r\nexport const getExchanges = () => async(dispatch) =>{\r\n    const response = await cryptoApi.get('/exchanges');\r\n\r\n    dispatch({\r\n        type:\"GET_EXCHANGES\",\r\n        payload:response.data.data\r\n    })\r\n}\r\n\r\n\r\nexport const getNews = () => async(dispatch) =>{\r\n    const response = await cryptoNewsApi.get('/search',{\r\n        params:{\r\n            q: 'cryptocurrency news',\r\n            count: '50'\r\n        }\r\n    })\r\n\r\n    dispatch({\r\n        type:'GET_NEWS',\r\n        payload: response.data.value\r\n    })\r\n\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport {Link} from 'react-router-dom';\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { clearCrypto } from \"../actions\";\r\nimport \"./Cryptocurrencies.css\";\r\n\r\nconst Cryptocurrencies = () => {\r\n  const cryptos = useSelector((state) => state.crypto.cryptoData.coins);\r\n  const [cryptoData, setData] = useState(cryptos);\r\n  const dispatch = useDispatch();\r\n\r\n  const [search, setSearch] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(clearCrypto());\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const filteredData = cryptos?.filter((crypto) =>\r\n      crypto.name.toLowerCase().includes(search.toLowerCase())\r\n    );\r\n    setData(filteredData);\r\n  }, [search, cryptos]);\r\n\r\n  const renderSearch = () => {\r\n    return (\r\n      <div class=\"ui search\">\r\n        <div class=\"ui icon input\">\r\n          <input\r\n            class=\"prompt\"\r\n            type=\"text\"\r\n            placeholder=\"Search crypto\"\r\n            value={search}\r\n            onChange={(e) => setSearch(e.target.value)}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const changeColor = (change) =>{\r\n    if(change < 0){\r\n      return(<div className=\"crypto__red\">{change}%</div>)\r\n    }else{\r\n      return(<div className=\"crypto__green\">{change}%</div>)\r\n    }\r\n  }\r\n \r\n  const renderCryptos = () => {\r\n    const formatter = new Intl.NumberFormat(\"en-US\", {\r\n      minimumFractionDigits: 2,\r\n    });\r\n    if (cryptoData) {\r\n      return cryptoData.map((crypto, i) => {\r\n        return (\r\n          \r\n            <tr>\r\n              <td>{i + 1}</td>\r\n              <td>\r\n              <Link className=\"crypto__align\" to={`/crypto/${crypto.id}`}>\r\n                  <img src={crypto.iconUrl} width=\"20\" /> {crypto.name}\r\n               </Link>\r\n              </td>\r\n              <td>${formatter.format(crypto.price)}</td>\r\n              <td>{changeColor(crypto.change)}</td>\r\n              <td>${formatter.format(crypto.marketCap)}</td>\r\n              <td>${formatter.format(crypto.volume)}</td>\r\n              <td>{formatter.format(crypto.circulatingSupply)}</td>\r\n            </tr>\r\n       \r\n        );\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"cryptocurrencies\">\r\n      <div className=\"cryptocurrencies__header\">\r\n        <h1>Today's Cryptocurrency Prices</h1>\r\n        {renderSearch()}\r\n      </div>\r\n\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>24h</th>\r\n            <th>Market Cap</th>\r\n            <th>Volume</th>\r\n            <th>Circulating Supply</th>\r\n          </tr>\r\n        </thead>\r\n        <thead>{renderCryptos()}</thead>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cryptocurrencies;\r\n","import React,{useEffect,useState} from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport './Exchanges.css'\r\n\r\nconst Exchanges = () => {\r\n\r\n    const exchanges = useSelector((state) => state.crypto.exchanges.exchanges)\r\n\r\n    const [search,setSearch] = useState('');\r\n    const [exchangesData, setData] = useState(exchanges);\r\n\r\n    useEffect(() =>{\r\n        const filteredData = exchanges?.filter((exchange) => exchange.name.toLowerCase().includes(search.toLowerCase()));\r\n        setData(filteredData);\r\n    },[search,exchanges])\r\n\r\n    const renderSearch = () => {\r\n      return (\r\n        <div class=\"ui search\">\r\n          <div class=\"ui icon input\">\r\n            <input\r\n              class=\"prompt\"\r\n              type=\"text\"\r\n              placeholder=\"Search crypto\"\r\n              value={search}\r\n              onChange={(e) => setSearch(e.target.value)}\r\n            />\r\n          </div>\r\n        </div>\r\n      );\r\n    };\r\n\r\n    const renderExchanges = () =>{\r\n        const formatter = new Intl.NumberFormat('en-US', {\r\n            style: 'currency',\r\n            currency: 'USD',\r\n            minimumFractionDigits: 0\r\n          })\r\n        if(exchangesData){\r\n            return exchangesData.map((exchange,i) =>{\r\n                return (<tr>\r\n                    <td>{i+1}</td>\r\n                    <td><div><img src={exchange.iconUrl} width=\"20\"/> {exchange.name}</div></td>\r\n                    <td>{formatter.format(exchange.volume)}</td>\r\n                    <td>{exchange.numberOfMarkets}</td>\r\n                </tr>)\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <div className=\"exchanges\">\r\n            <div className=\"exchanges__header\">\r\n            <h1>Top Crypto Exchanges</h1>\r\n            {renderSearch()}\r\n            </div>\r\n            \r\n            <table>\r\n                <thead>\r\n                <tr>\r\n                    <th>#</th>\r\n                    <th>Name</th>\r\n                    <th>Volume</th>\r\n                    <th>Markets</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {renderExchanges()}\r\n                </tbody>\r\n                \r\n            </table>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Exchanges\r\n","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { useSelector } from 'react-redux';\r\nimport './News.css';\r\n\r\n\r\nconst News = () => {\r\n\r\n    const news = useSelector((state) => state?.cryptoNews.news);\r\n\r\n    const renderNews = () => {\r\n      if (news) {\r\n        return news.map((data, i) => {\r\n          return (\r\n            <a href={data.url} target=\"_blank\">\r\n              <div className=\"newscard\">\r\n                <div className=\"newscard__header\">\r\n                  <div className=\"newscard__title\">\r\n                    <h3>{data.name}</h3>\r\n                  </div>\r\n                  <img\r\n                    src={data.image?.thumbnail.contentUrl}\r\n                    className=\"newscard__img\"\r\n                  />\r\n                </div>\r\n                <div className=\"newscard__details\">\r\n                  <p>{data.description}</p>\r\n                </div>\r\n                <div className=\"newscard__footer\">\r\n                  <div className=\"newscard__provider\">\r\n                    <div>\r\n                      <img\r\n                        src={data.provider[0]?.image?.thumbnail.contentUrl}\r\n                        className=\"provider__img\"\r\n                      />\r\n                    </div>\r\n                    <div>\r\n                      <p>{data.provider[0]?.name}</p>\r\n                    </div>\r\n                  </div>\r\n                  <div className='newscard__date'>\r\n                    {moment(data?.datePublished).format('LL')}\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </a>\r\n          );\r\n        });\r\n      }\r\n    };\r\n\r\n\r\n    return (\r\n        <div className='news'>\r\n            <div className='news__header'>\r\n                <div className='news__title'>\r\n                <h1>Cryptocurrency News</h1>\r\n                </div>\r\n            </div>\r\n            <div className='news__cards'>\r\n            {renderNews()}\r\n            </div>\r\n            \r\n            \r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default News\r\n","import React, { useEffect } from \"react\";\r\nimport { useParams, useNavigate} from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getCrypto } from \"../actions\";\r\nimport \"./CryptoDetails.css\";\r\nimport ArrowBackIcon from '@mui/icons-material/ArrowBack';\r\n\r\n\r\nconst CryptoDetails = () => {\r\n\r\n  const navigate = useNavigate();\r\n  const { coinId } = useParams();\r\n  const dispatch = useDispatch();\r\n  const coinDetails = useSelector((state) => state.crypto.cryptoDetails.coin);\r\n  useEffect(() => {\r\n    dispatch(getCrypto(coinId));\r\n  }, [coinId]);\r\n\r\n  const formatter = new Intl.NumberFormat(\"en-US\", {\r\n    style: \"currency\",\r\n    currency: \"USD\",\r\n    minimumFractionDigits: 0,\r\n  });\r\n  const formatter2 = new Intl.NumberFormat(\"en-US\", {\r\n    minimumFractionDigits: 0,\r\n  });\r\n  if(!coinDetails){\r\n    return <div>LOADING</div>\r\n  }\r\n  return (\r\n    <div className=\"cryptodetails\">\r\n      <div className=\"cryptodetails__rank\">Rank #{coinDetails.rank}</div>\r\n      <div className=\"cryptodetails__header\">\r\n      <div className=\"cryptodetails__nameHeader\">\r\n        <img src={coinDetails.iconUrl} width=\"30\" />\r\n        <h2>{coinDetails.name}</h2>\r\n        <div className=\"cryptodetails__symbol\">{coinDetails.symbol}</div>\r\n      </div>\r\n      <div className=\"cryptodetails__goback\" onClick={() => navigate('/cryptocurrencies')}>\r\n       <ArrowBackIcon />\r\n      </div>\r\n      </div>\r\n     \r\n      <div className=\"cryptodetails__price\">\r\n        <h1>{formatter.format(coinDetails.price)}</h1>\r\n      </div>\r\n\r\n      <div className=\"cryptodetails__stats\">\r\n        <div className=\"cryptodetails__statsleft\">\r\n          <div className=\"cryptodetails__statswrapper\">\r\n            <div>Market Cap</div>\r\n            <div className=\"statswrapper__margin\">{formatter.format(coinDetails.marketCap)}</div>\r\n          </div>\r\n          <div className=\"cryptodetails__statswrapper\">\r\n            <div>24 Hour Trading Vol</div>\r\n            <div className=\"statswrapper__margin\">{formatter.format(coinDetails.volume)}</div>\r\n          </div>\r\n        </div>\r\n        <div className=\"cryptodetails__statsright\">\r\n          <div className=\"cryptodetails__statswrapper\">\r\n            <div>Circulating Supply</div>\r\n            <div className=\"statswrapper__margin\">{formatter2.format(coinDetails.circulatingSupply)}</div>\r\n          </div>\r\n          <div className=\"cryptodetails__statswrapper\">\r\n            <div>Total Supply </div>\r\n            <div className=\"statswrapper__margin\">{formatter2.format(coinDetails.totalSupply)}</div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"cryptodetails__description\">\r\n        <h2>What is {coinDetails.name}?</h2>\r\n        <div dangerouslySetInnerHTML={{__html: `${coinDetails.description}`}}></div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CryptoDetails;\r\n","import React, { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport { getCryptos,getExchanges, getNews } from \"./actions\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Footer from \"./components/Footer\";\r\nimport Homepage from \"./pages/Homepage\";\r\nimport Cryptocurrencies from \"./pages/Cryptocurrencies\";\r\nimport Exchanges from \"./pages/Exchanges\";\r\nimport News from \"./pages/News\";\r\nimport CryptoDetails from \"./pages/CryptoDetails\";\r\n\r\nfunction App() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    dispatch(getExchanges());\r\n    dispatch(getCryptos());\r\n    dispatch(getNews());\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <BrowserRouter>\r\n        <div className=\"app__navbar\">\r\n          <Navbar />\r\n        </div>\r\n        <div className=\"app__main\">\r\n          <Routes>\r\n            <Route index path=\"/\" element={<Homepage />} />\r\n            <Route path=\"/cryptocurrencies\" element={<Cryptocurrencies />} />\r\n            <Route path=\"/crypto/:coinId\" element={<CryptoDetails/>} />\r\n            <Route path=\"/exchanges\" element={<Exchanges />} />\r\n            <Route path=\"/news\" element={<News />} />\r\n          </Routes>\r\n        </div>\r\n        <div className=\"app__footer\">\r\n          <Footer/>\r\n        </div>\r\n      </BrowserRouter>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const INITIAL_STATE = {\r\n    cryptoData: [],\r\n    exchanges:[],\r\n    cryptoDetails: {coin:[]}\r\n}\r\n\r\nconst cryptoReducer = (state=INITIAL_STATE, action) =>{\r\n    switch(action.type){\r\n        case 'GET_CRYPTOS':\r\n            return {...state, cryptoData:action.payload}\r\n        case 'GET_EXCHANGES':\r\n            return {...state, exchanges:action.payload}\r\n        case 'GET_CRYPTO':\r\n            return {...state, cryptoDetails: action.payload}\r\n        case 'CLEAR_CRYPTO':\r\n            return {...state, cryptoDetails: {}}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cryptoReducer","const INITIAL_STATE = {\r\n    news: []\r\n}\r\n\r\nconst cryptoNewsReducer = (state = INITIAL_STATE, action) =>{\r\n    switch(action.type){\r\n        case 'GET_NEWS':\r\n            return {...state, news:action.payload}\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default cryptoNewsReducer\r\n\r\n","import { combineReducers } from \"redux\";\r\nimport cryptoReducer from './cryptoReducer'\r\nimport cryptoNewsReducer from \"./cryptoNewsReducer\";\r\n\r\nexport default combineReducers({\r\n    crypto: cryptoReducer,\r\n    cryptoNews: cryptoNewsReducer\r\n})\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {Provider} from 'react-redux';\r\nimport { createStore, applyMiddleware, compose } from 'redux';\r\nimport thunk from  'redux-thunk';\r\nimport App from './App';\r\nimport reducers from './reducers';\r\n\r\nconst composeEnchancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\nconst store = createStore(reducers, composeEnchancers(applyMiddleware(thunk)))\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <App />\r\n  </Provider>,\r\n  document.getElementById(\"root\")\r\n);"],"sourceRoot":""}